apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    garden.io/action: deploy.api
    garden.io/service: api
  name: api
spec:
  selector:
    matchLabels:
      garden.io/action: deploy.api
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: api
      labels:
        garden.io/action: deploy.api
        garden.io/service: api
    spec:
      containers:
      - name: api
        args:
        - python
        - app.py
        env:
        image: "${variables.image}"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 90
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 90
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 2
          periodSeconds: 1
          successThreshold: 2
          timeoutSeconds: 3
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: 10m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: false
